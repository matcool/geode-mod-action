name: Build Geode Mod

on:
  workflow_dispatch:
  push:
    branches:
      - "main"

env:
  GEODE_SDK: ${{ github.workspace }}/sdk
  MOD_NAME: geode-mod-action
  MOD_ID: mat.geode-mod-action

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
        - name: "Windows"
          bin_folder: "windows"
          cli_name: "geode.exe"
          os: windows-2019
          extra_flags: '-G "Visual Studio 16 2019" -T host=x64 -A win32'
          out_paths:  './build/Release/geode-mod-action.dll'
          
        - name: "macOS"
          bin_folder: "macos"
          cli_name: "geode"
          os: macos-latest
          extra_flags: ""
          out_paths: './build/libgeode-mod-action.dylib'
          
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - uses: actions/checkout@v3
      with:
        submodules: recursive
        repository: geode-sdk/geode
        # ref: v0.4.8
        path: ${{ env.GEODE_SDK }}
     
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x86
      if: matrix.config.os == 'windows-2019'
      
    - name: Build Geode SDK
      run: |
        cd ${{ github.workspace }}/sdk
        mkdir bin
        mkdir bin/nightly
        cd bin/nightly
        curl -L https://github.com/geode-sdk/geode/releases/download/v0.4.8/geode-v0.4.8-win.zip -o geode-sdk.zip
        tar -xf geode-sdk.zip
      if: matrix.config.os == 'windows-2019'
      
    - name: Build Geode SDK
      run: |
        cd ${{ github.workspace }}/sdk
        mkdir bin
        mkdir bin/nightly
        cd bin/nightly
        curl -L https://github.com/geode-sdk/geode/releases/download/v0.4.8/geode-v0.4.8-mac.zip -o geode-sdk.zip
        tar -xf geode-sdk.zip
      if: matrix.config.os == 'macos-latest'

    - name: Configure CMake
      run: |
        cd ${{ github.workspace }}
        cmake -B build ${{ matrix.config.extra_flags }} -DGEODE_DISABLE_CLI_CALLS=1
    
    - name: Build
      run: |
        cd ${{ github.workspace }}/build
        cmake --build . --config Release
    
    - uses: actions/upload-artifact@v3
      with:
        name: "build-${{ matrix.config.bin_folder }}"
        path: "${{ matrix.config.out_paths }}"
        
        
  package:
    name: "Package both builds"
    # would use linux but theres no cli build for it
    runs-on: windows-2019
    needs: ['build']
    
    steps:          
      - name: Download and Unzip CLI
        run: |
          curl -L https://github.com/geode-sdk/cli/releases/download/v1.0.7/geode-cli-v1.0.7-win.zip -o geode-cli.zip
          tar -xf geode-cli.zip

      - uses: actions/download-artifact@v3
        with:
          name: build-windows
          
      - uses: actions/download-artifact@v3
        with:
          name: build-macos
      
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          
      - name: Merge
        shell: bash
        run: |
          mv $MOD_NAME.dll $MOD_ID.dll
          mv lib$MOD_NAME.dylib $MOD_ID.dylib
          geode.exe package new . --binary $MOD_NAME.dll --binary $MOD_NAME.dylib --output $MOD_NAME.geode
         
      - uses: actions/upload-artifact@v3
        with:
          name: Build Output
          path: "${{ env.MOD_NAME }}.geode"
          
